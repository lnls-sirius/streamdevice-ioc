# SPIxCONV_NLK_OnAxis.db

# Record definition for all digital and analog channels. Developed for SPIxCONV version 1.1 and newer.

# This file contains four records definition:
#   - analog out
#   - analog in
#   - digital out
#   - digital in

#==============================================================================
#   ANALOG OUT
#==============================================================================
record(ao, "$(PREFIX):Voltage-SP") {
    field(DESC, "analog out parameter")
    field(DTYP, "stream")
    field(EGU, "Volt")
    field(AOFF, "-10.0")
    field(ASLO, "0.00007629423635191479459684")
    field(EOFF, "0.0")
    field(ESLO, "$(VOLTAGE_FACTOR)")
    field(OUT, "@SPIxCONV.proto set_analog_output($(SPIxCONV_ADDRESS)) socket_spixconv")
    field(LINR, "LINEAR")
    field(PREC, "1")                            # Display Precision
    field(SCAN, "Passive")
#    field(HOPR, "10.0")
#    field(LOPR, "-10.0")
}
#------------------------------------------------------------------------------
record(ai, "$(PREFIX):Voltage-RB") {
    field(DESC, "read analog out setpoint") # Description
    field(DTYP, "stream")                       # Device Type
    field(EGU,  "Volt")                         # Engineering Units
    # DAC and ADC calibration (applied to raw value):
    # calibration is already done when requesting a read/write command!
    #   --> functions dac.write() and adc.read()
    # adjust conversion from binary code to voltage:
    field(ASLO, "0.00007629423635191479459684") # Calibration Slope
    field(AOFF, "-10.0")                        # Calibration Offset
    # adjust conversion to voltage power supply range:
    field(ESLO, "$(VOLTAGE_FACTOR)")            # Conversion Slope
    field(EOFF, "0.0")                          # Conversion Offset
    field(INP,  "@SPIxCONV.proto read_analog_output($(SPIxCONV_ADDRESS)) socket_spixconv")
    field(LINR, "LINEAR")                       # Type of Conversion
    field(PINI, "YES")                          # Process at Initialization
    field(PREC, "1")                            # Display Precision
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
}
#==============================================================================
#   ANALOG IN
#==============================================================================
# measure according to the high voltage supply range
record(ai, "$(PREFIX):Voltage-Mon") {
    field(DESC, "analog in parameter")          # Description
    field(DTYP, "stream")                       # Device Type
    field(EGU,  "Volt")                         # Engineering Units
    # DAC and ADC calibration (applied to raw value):
    # calibration is already done when requesting a read/write command!
    #   --> functions dac.write() and adc.read()
    # adjust conversion from binary code to voltage:
    field(ASLO, "0.00007629423635191479459684") # Calibration Slope
    field(AOFF, "-10.0")                        # Calibration Offset
    # adjust conversion to voltage power supply range:
    field(ESLO, "$(VOLTAGE_FACTOR)")            # Conversion Slope
    field(EOFF, "0.0")                          # Conversion Offset
    field(INP,  "@SPIxCONV.proto read_analog_input($(SPIxCONV_ADDRESS)) socket_spixconv")
    field(LINR, "LINEAR")                       # Type of Conversion
    field(PINI, "YES")                          # Process at Initialization
    field(PREC, "1")                            # Display Precision
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
    field(SMOO, "0.5")                          # Smoothing factor from 0 to 1 (0: no smoothing; 1: value never change)
}
#==============================================================================
#   DIGITAL PORT A
#==============================================================================
#***************************************
#   LOCAL/REMOTE (1 INPUT)
#***************************************
# interlock signal
#-------------------
record(bi, "$(PREFIX):CtrlMode-Mon") {
    field(DESC, "Control mode")
    field(INP, "@SPIxCONV.proto read_portA_digital_input_bit($(SPIxCONV_ADDRESS),0) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
    field(ZNAM, "Remote")                       # One Name
    field(ONAM, "Local")                        # Zero Name
}
#***************************************
#   INTERLOCKS (7 INPUTS)
#***************************************
# interlock signal
#-------------------
record(bi, "$(PREFIX):Intlk1-Mon") {
    field(DESC, "Interlock signal 1")
    field(INP, "@SPIxCONV.proto read_portA_digital_input_bit($(SPIxCONV_ADDRESS),1) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
    field(ZNAM, "Fail")                         # Zero Name
    field(ONAM, "Ok")                           # One Name
}
#-------------------
# interlock label
#-------------------
record(stringout, "$(PREFIX):Intlk1Label-Cte") {
    field(DESC, "Interlock label 1")
    field(VAL, "Switch module")
}
#------------------------------------------------------------------------------
# interlock signal
#-------------------
record(bi, "$(PREFIX):Intlk2-Mon") {
    field(DESC, "Interlock signal 2")
    field(INP, "@SPIxCONV.proto read_portA_digital_input_bit($(SPIxCONV_ADDRESS),2) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
    field(ZNAM, "Fail")                         # Zero Name
    field(ONAM, "Ok")                           # One Name
}
#-------------------
# interlock label
#-------------------
record(stringout, "$(PREFIX):Intlk2Label-Cte") {
    field(DESC, "Interlock label 2")
    field(VAL, "AC CPFL OFF")
}
#------------------------------------------------------------------------------
# interlock signal
#-------------------
record(bi, "$(PREFIX):Intlk3-Mon") {
    field(DESC, "Interlock signal 3")
    field(INP, "@SPIxCONV.proto read_portA_digital_input_bit($(SPIxCONV_ADDRESS),3) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
    field(ZNAM, "Fail")                         # Zero Name
    field(ONAM, "Ok")                           # One Name
    }
#-------------------
# interlock label
#-------------------
record(stringout, "$(PREFIX):Intlk3Label-Cte") {
    field(DESC, "Interlock label 3")
    field(VAL, "Temperature")
}
#------------------------------------------------------------------------------
# interlock signal
#-------------------
record(bi, "$(PREFIX):Intlk4-Mon") {
    field(DESC, "Interlock signal 4")
    field(INP, "@SPIxCONV.proto read_portA_digital_input_bit($(SPIxCONV_ADDRESS),4) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
    field(ZNAM, "Fail")                         # Zero Name
    field(ONAM, "Ok")                           # One Name
}
#-------------------
# interlock label
#-------------------
record(stringout, "$(PREFIX):Intlk4Label-Cte") {
    field(DESC, "Interlock label 4")
    field(VAL, "Personnel protection")
}
#------------------------------------------------------------------------------
# interlock signal
#-------------------
record(bi, "$(PREFIX):Intlk5-Mon") {
    field(DESC, "Interlock signal 5")
    field(INP, "@SPIxCONV.proto read_portA_digital_input_bit($(SPIxCONV_ADDRESS),5) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
    field(ZNAM, "Fail")                         # Zero Name
    field(ONAM, "Ok")                           # One Name
}
#-------------------
# interlock label
#-------------------
record(stringout, "$(PREFIX):Intlk5Label-Cte") {
    field(DESC, "Interlock label 5")
    field(VAL, "HVPS Overcurrent")
}
#------------------------------------------------------------------------------
# interlock signal
#-------------------
record(bi, "$(PREFIX):Intlk6-Mon") {
    field(DESC, "Interlock signal 6")
    field(INP, "@SPIxCONV.proto read_portA_digital_input_bit($(SPIxCONV_ADDRESS),6) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
    field(ZNAM, "Fail")                         # Zero Name
    field(ONAM, "Ok")                           # One Name
}
#-------------------
# interlock label
#-------------------
record(stringout, "$(PREFIX):Intlk6Label-Cte") {
    field(DESC, "Interlock label 6")
    field(VAL, "HVPS Overvoltage")
}
#------------------------------------------------------------------------------
# interlock signal
#-------------------
record(bi, "$(PREFIX):Intlk7-Mon") {
    field(DESC, "Interlock signal 7")
    field(INP, "@SPIxCONV.proto read_portA_digital_input_bit($(SPIxCONV_ADDRESS),7) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
    field(ZNAM, "Fail")                         # Zero Name
    field(ONAM, "Ok")                           # One Name
}
#-------------------
# interlock label
#-------------------
record(stringout, "$(PREFIX):Intlk7Label-Cte") {
    field(DESC, "Interlock label 7")
    field(VAL, "External")
}
#==============================================================================
#   DIGITAL PORT B
#==============================================================================
#***************************************
#   SET OPERATION MODE (1 OUTPUT)
#***************************************
record(bo, "$(PREFIX):OpMode-Sel") {
    field(DESC, "Set operation mode")
    field(OUT, "@SPIxCONV.proto set_portB_digital_output_bit($(SPIxCONV_ADDRESS),0) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(SCAN, "Passive")                      # Scanning Rate
    field(VAL, "0")
    field(ZNAM, "NLK")                          # Zero Name
    field(ONAM, "On Axis")                      # One Name
}
#-------------------
# PV label
#-------------------
record(stringout, "$(PREFIX):OpModeLabel1-Cte") {
    field(DESC, "PV label 0")
    field(VAL, "Set operation mode")
}
#***************************************
#   TURN ON/OFF POWER SUPPLY (1 OUTPUT)
#***************************************
record(bo, "$(PREFIX):PwrState-Sel") {
    field(DESC, "Turn ON/OFF HVPS")
    field(OUT, "@SPIxCONV.proto set_portB_digital_output_bit($(SPIxCONV_ADDRESS),1) socket_spixconv")
    field(DTYP, "stream")                      # Device Type
    field(SCAN, "Passive")                     # Scanning Rate
    field(ZNAM, "Off")                          # Zero Name
    field(ONAM, "On")                           # One Name
}
#-------------------
# PV label
#-------------------
record(stringout, "$(PREFIX):PwrStateLabel1-Cte") {
    field(DESC, "PV label 1")
    field(VAL, "Turn ON/OFF HVPS")
}
#***************************************
#   TRIGGER (1 OUTPUT)
#***************************************
record(bo, "$(PREFIX):Pulse-Sel") {
    field(DESC, "Turn ON/OFF trigger pulse")
    field(OUT, "@SPIxCONV.proto set_portB_digital_output_bit($(SPIxCONV_ADDRESS),2) socket_spixconv")
    field(DTYP, "stream")                      # Device Type
    field(SCAN, "Passive")                     # Scanning Rate
    field(ZSV, "NO_ALARM")
    field(OSV, "NO_ALARM")
    field(ZNAM, "Off")                          # Zero Name
    field(ONAM, "On")                           # One Name
}
#-------------------
# PV label
#-------------------
record(stringout, "$(PREFIX):PulseLabel-Cte") {
    field(DESC, "PV label 2")
    field(VAL, "Turn ON/OFF trigger pulse")
}
#***************************************
#   TRIGGER --> OUTPUT read
#***************************************
# the record is set as input, but it is actually reading the output value set previously
record(bi, "$(PREFIX):Pulse-Sts") {
    field(DESC, "Read if trigger pulse is enabled or not")
    field(INP, "@SPIxCONV.proto read_portB_digital_output_bit($(SPIxCONV_ADDRESS),2) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
    field(ZSV, "NO_ALARM")
    field(OSV, "NO_ALARM")
    field(ZNAM, "Off")                          # Zero Name
    field(ONAM, "On")                           # One Name
}
#***************************************
#   RESET (1 OUTPUT)
#***************************************
record(bo, "$(PREFIX):Reset-Cmd") {
    field(DESC, "Reset the controller unit")
    field(OUT, "@SPIxCONV.proto reset($(SPIxCONV_ADDRESS)) socket_spixconv")
    field(DTYP, "stream")                      # Device Type
    field(SCAN, "Passive")                     # Scanning Rate
    field(HIGH, "0.2")                         # Seconds to Hold High
    field(ZNAM, "Running")                      # Zero Name
    field(ONAM, "Resetting")                    # One Name
}
#-------------------
# PV label
#-------------------
record(stringout, "$(PREFIX):ResetLabel-Cte") {
    field(DESC, "PV label 3")
    field(VAL, "Reset the controller unit")
}
#***************************************
#   AVAILABLE PVs (4 I/O)
#***************************************
record(bi, "$(PREFIX):OpMode-Sts") {
    field(DESC, "Interlock signal 5")
    field(INP, "@SPIxCONV.proto read_portB_digital_input_bit($(SPIxCONV_ADDRESS),5) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
    field(ZNAM, "NLK")                          # Zero Name
    field(ONAM, "On Axis")                      # One Name
}
#-------------------
# PV label
#-------------------
record(stringout, "$(PREFIX):OpModeLabel2-Cte") {
    field(DESC, "PV label 5")
    field(VAL, "Read operation mode")
}
#***************************************
#   SWITCH OVERCURRENT (1 INPUT)
#***************************************
record(bi, "$(PREFIX):Intlk8-Mon") {
    field(DESC, "Interlock signal 8")
    field(INP, "@SPIxCONV.proto read_portB_digital_input_bit($(SPIxCONV_ADDRESS),6) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
    field(ZNAM, "Fail")                         # Zero Name
    field(ONAM, "Ok")                           # One Name
}
#-------------------
# PV label
#-------------------
record(stringout, "$(PREFIX):Intlk8Label-Cte") {
    field(DESC, "Interlock label 8")
    field(VAL, "Switch Overcurrent")
}
#------------------------------------------------------------------------------
record(bi, "$(PREFIX):PwrState-Sts") {
    field(DESC, "Read power supply status")
    field(INP, "@SPIxCONV.proto read_portB_digital_input_bit($(SPIxCONV_ADDRESS),7) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
    field(ZNAM, "Off")                          # Zero Name
    field(ONAM, "On")                           # One Name
}
#-------------------
# PV label
#-------------------
record(stringout, "$(PREFIX):PwrStateLabel2-Cte") {
    field(DESC, "PV label 7")
    field(VAL, "HVPS Status")
}
#==============================================================================
#   ON/OFF STATE
#==============================================================================
record(bo, "$(PREFIX):OnOff") {
    field(DESC, "On/Off IOC status")
    field(SCAN, "Passive")
    field(VAL, "1")
    field(ZNAM, "Off")                          # Zero Name
    field(ONAM, "On")                           # One Name
}
#==============================================================================
#***************************************
#   INTERLOCKS (7 INPUTS)
#***************************************
#record(waveform, "$(PREFIX):IntlkLabels-Cte") {
#record(stringout, "$(PREFIX):IntlkLabels-Cte") {
#    field(DESC, "Interlock labels")
#    field(DTYP, "stream")
#    field(FTVL, "STRING")
#    #field(FTVL, "UCHAR")
#    field(INP, "@SPIxCONV.proto read_interlock_labels socket_spixconv")
#    field(NELM, "7")
#    #field(NELM, "256")
#    field(PINI, "YES")
#}
