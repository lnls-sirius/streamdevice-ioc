# Stream Device Protocol for the MKS 937B Multi-Sensor System
# This protocol uses features defined in Stream Device Version 2
#
# Based on the work by Ian Gillingham - April 2010
#
# $1 = address, Controller address (001 .. 253)
# $2 = channel number: 1 - 5
# $3 = setpoint: 1 - 12


# Query format 
# Command @<aaa><Coommand>?;FF
# Response @<aaa>ACK<Response>;FF

# Set format
# Command @<aaa><Command>!<parameter>;FF
# Response @<aaa>ACK<Response>;FF

locktimeout = 5000;
terminator   = ";FF";
replytimeout = 1000;
readtimeout  = 1000;
extrainput   = Ignore;

# The 937B appears to have preamble on all commands and responses
# of the form '@<aaa>', where aaa is the unit number (1-254)
# presumably to cater for multidrop RS485 for multiple controllers.
# Default here to assume just one unit (as on RS232). Will need to make this variable if RS485 is ever implemented.
unitid = 1;

# Send an initial dummy command to clear out any garbage the mks has already received.
# This makes it more likely that the first command sent is received OK.
# NB we dont wait for a response to the dummy command because if it didnt arrive (e.g. rs232 unplugged) then
# streams would issue a replyTimeout exception and stop the ioc.
@init{out " ";}


# Use a regular expression to not care about anything before ACK.
# This is important with the MKS firmware update in Feb 2012, where '@' will precede all responses,
# but we still need backward compatibility with units which do not emit '@'.



# Controller parameters
# Pressure unit, Unit=Torr, MBAR, PASCAL, Micron
unit { 
    out "@\$1U?"; 
    in "%*/ACK/%s"; 
}

# Firmware version
# n=1=Slot A; n=2=Slot B; n=3=Slot C
# n=4=AIO; n=5=COMM; n=6=Main
ctlv { 
    out "@\$1FV6?"; 
    in "%*/ACK/%f"; 
}
comv { 
    out "@\$1FV5?"; 
    in "%*/ACK/%f";  
    
    @mismatch{};
}

# Display the sensor module type. T1, T2, T3=(CC,HC, CM, PR, NC). 
# NC= no connection. T4=(NA, PB, PC)
modcc { 
    out "@\$1MT?"; 
    in "%*/ACK/%{HC|CC|PR|CV|TC|CM|P1|C1|T1|M1|NC|WC}";
}
moda { 
    out "@\$1MT?"; 
    in "%*/ACK/\?\?,%{HC|CC|PR|CV|TC|CM|P1|C1|T1|M1|NC|WC}"; 
}
modb { 
    out "@\$1MT?"; 
    in "%*/ACK/\?\?,\?\?,%{HC|CC|PR|CV|TC|CM|P1|C1|T1|M1|NC|WC}"; 
}

###########################################################################


#debug
debug { 
    ExtraInput = Ignore; 
    out "%s"; 
    in "%s"
}
 
# The error code displayed in TXT mode.
set_error_txt { 
    out "@254SEM!TXT"; 
    in "%s"; 
}

# The error code displayed in CODE mode.
set_error_code { 
    out "@254SEM!CODE"; 
    in "%s"; 
}

pirgenable { 
    out "@\$1%{CP\$2!OFF|CP\$2!ON}"; 
    in "%*/ACK/%{OFF|ON}"; 
}

get_gauge_enabled { 
    out "@\$1CP\$2?"; 
    in "%*/ACK/%{OFF|ON}"; 
}

# The 1x10 -2 torr upper limit can be extended to 9.5x10 -1 torr by using a @254XCS!ON;
set_cc_extended_range  { 
    out "@\$1XCS\$2!ON"; in "%*/ACK/"; 
}

# Query the HC (hot cathode) degas status Turn on/off degas
degas_enable { 
    out "@\$1%{DG\$2!OFF|DG\$2!ON}"; 
    in "%*/ACK/%{OFF|ON}"; 
}
get_degas_enabled{ 
    out "@\$1DG\$2?"; 
    in "%*/ACK/%{OFF|ON}"; 
}