# Stream Device Protocol for the MKS 937B Multi-Sensor System
# This protocol uses features defined in Stream Device Version 2
#
# Based on the work by Ian Gillingham - April 2010
#
# $1 = address, Controller address (001 .. 253)
# $2 = channel number: 1 - 5
# $3 = setpoint: 1 - 12


# Query format 
# Command @<aaa><Coommand>?;FF
# Response @<aaa>ACK<Response>;FF

# Set format
# Command @<aaa><Command>!<parameter>;FF
# Response @<aaa>ACK<Response>;FF

locktimeout  = 5000;
terminator   = ";FF";
replytimeout = 1000;
readtimeout  = 1000;
extrainput   = Ignore;

# The 937B appears to have preamble on all commands and responses
# of the form '@<aaa>', where aaa is the unit number (1-254)
# presumably to cater for multidrop RS485 for multiple controllers.
# Default here to assume just one unit (as on RS232). Will need to make this variable if RS485 is ever implemented.
unitid = 1;

# Send an initial dummy command to clear out any garbage the mks has already received.
# This makes it more likely that the first command sent is received OK.
# NB we dont wait for a response to the dummy command because if it didnt arrive (e.g. rs232 unplugged) then
# streams would issue a replyTimeout exception and stop the ioc.
@init{out " ";}


# Use a regular expression to not care about anything before ACK.
# This is important with the MKS firmware update in Feb 2012, where '@' will precede all responses,
# but we still need backward compatibility with units which do not emit '@'.


# PIRANI AND CONVECTION PIRANI CONTROL COMMANDS


# Query or set a gas correction factor for a CC gauge on
# Channel n. Valid range is from 0.1 to 10.  ($2)  1, 3, 5
# todo: UCn


# Send and atmospheric pressure to perform ATM calibration
# The PR/CP must be at atmospheric pressure when running ATM calibration
set_atm{ 
   wait  10;
    out "@\$1ATM\$2?"; 
    in "@\$1ACK%E";wait  10;
}

# Zero a PR/CP on a channel n. Execute only when  the pressure ios less than 1x10-2 torr
zero_pr_cp{ 
  wait  10;
    out "@\$1VAC\$2?"; 
    in "@\$1ACKOK";

    @mismatch { 
        in "@\$1NAK"; 
    }wait  10;
}

# Query the channel power status for PR, CP, HC or high voltage status for CC.  $2: channel 1-6
get_enabled{ 
   wait  10;
    out "@\$1CP\$2?"; 
    in "@\$1ACK%{OFF|ON}";wait  10;
}
 
# Turn on/off the channel power for PR, CP, HC, or high voltage for CC). $2: channel 1-6
set_enabled{
   wait  10;
    out "@\$1CP\$2!%{OFF|ON}"; 
    in "@\$1ACK%{OFF|ON}"; wait  10;
}
