# Stream Device Protocol for the MKS 937B Multi-Sensor System
# This protocol uses features defined in Stream Device Version 2
#
# Based on the work by Ian Gillingham - April 2010
#
# $1 = address, Controller address (001 .. 253)
# $2 = channel number: 1 - 5
# $3 = setpoint: 1 - 12


# Query format 
# Command @<aaa><Coommand>?;FF
# Response @<aaa>ACK<Response>;FF

# Set format
# Command @<aaa><Command>!<parameter>;FF
# Response @<aaa>ACK<Response>;FF

locktimeout = 5000;
terminator   = ";FF";
replytimeout = 1000;
readtimeout  = 1000;
extrainput   = Ignore;

# The 937B appears to have preamble on all commands and responses
# of the form '@<aaa>', where aaa is the unit number (1-254)
# presumably to cater for multidrop RS485 for multiple controllers.
# Default here to assume just one unit (as on RS232). Will need to make this variable if RS485 is ever implemented.
unitid = 1;

# Send an initial dummy command to clear out any garbage the mks has already received.
# This makes it more likely that the first command sent is received OK.
# NB we dont wait for a response to the dummy command because if it didnt arrive (e.g. rs232 unplugged) then
# streams would issue a replyTimeout exception and stop the ioc.
@init{out " ";}


# Use a regular expression to not care about anything before ACK.
# This is important with the MKS firmware update in Feb 2012, where '@' will precede all responses,
# but we still need backward compatibility with units which do not emit '@'.

###########################################################################



# RELAY AND CONTROL SETTINGS COMMANDS
# Relay setpoints ($2 1 to 12)
get_sp { 
    out "@\$1SP\$2?"; 

    in "@\$1ACK%E"; 
    
    @mismatch{
        in "@\$1NAK%s"; 
    } 
}

set_sp { 
    out "@\$1SP\$2!%0.1E"; 
    in "@\$1ACK%E"; 
    @init { get_sp; }
    
}
 
# Relay Hysteresis ($2 1 to 12)
get_relay_hyst { 
    out "@\$1SH\$2?"; 
    in "@\$1ACK%E"; 
 }
 set_relay_hyst { 
     out "@\$1SH\$2!%0.1E"; 
     in "@\$1ACK%E"; 

     @init { get_relay_hyst; }
 }

# # Relay direction ($2 1 to 12)
get_relay_direction { 
    out "@\$1SD\$2?"; 
    in "@\$1ACK%{ABOVE|BELOW}"; 
}

set_relay_direction { 
    out "@\$1SD\$2!%{ABOVE|BELOW}"; 
    in "@\$1ACK%{ABOVE|BELOW}"; 
    
    # For CC and HC the relay is fixed to bellow !
    @mismatch{
        in "@\$1NAK"; 
    }

    @init { get_relay_direction; }
}

    
# Relay mode, query or set status for relay ($2 1 to 12)
get_relay_mode { 
    out "@\$1EN\$2?";
    in "@\$1ACK%{SET|CLEAR|ENABLE}"; 
}
set_relay_mode { 
    out "@\$1EN\$2!%{SET|CLEAR|ENABLE}"; 
    in "@\$1ACK%{SET|CLEAR|ENABLE}"; 

    @init { get_relay_mode; }
}

# Query relay setpoint status ($2 1 to 12)
get_relaysp_status { 
    out "@\$1SS\$2?"; 
    in "@\$1ACK%{SET|CLEAR}"; 
}
 
