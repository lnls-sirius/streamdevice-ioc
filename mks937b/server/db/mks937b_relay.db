# substitutions:
#% macro, DEVICE, Device name
#% macro, PORT,   Asyn Port name, e.g. ty_40_0
#% macro, ADDRESS, Controller ADDRESS (001 .. 253)
################################################################################
# RELAY
record(bi, "$(DEVICE):RelayRb-$(RELAY):Trig"){
	field(SCAN, "$(SCAN_RATE)")
	field(FLNK, "$(DEVICE):RelayRb-$(RELAY)")
}

record(ai, "$(DEVICE):RelayRb-$(RELAY)") {
    field(DESC, "Read Setpoint for relay $(RELAY)") 
    field(PINI, "YES") 
    field(DTYP, "stream")
    field(INP,"@mks937b_relay.proto get_sp($(ADDRESS),$(RELAY)) $(PORT)")
}
record(ao, "$(DEVICE):RelaySp-$(RELAY)") {
    field(DESC, "Setpoint for relay $(RELAY)")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,"@mks937b_relay.proto set_sp($(ADDRESS),$(RELAY)) $(PORT)")

    field(FLNK, "$(DEVICE):RelayRb-$(RELAY)")
}

# Hysteresis
record(bi, "$(DEVICE):RelayHystRb-$(RELAY):Trig"){
	field(SCAN, "$(SCAN_RATE)")
	field(FLNK, "$(DEVICE):RelayHystRb-$(RELAY)")
}
record(ai, "$(DEVICE):RelayHystRb-$(RELAY)") {
    field(DESC, "Read Setpoint Hysteresis for relay $(RELAY)") 
    field(PINI, "YES") 
    field(DTYP, "stream")
    field(INP,"@mks937b_relay.proto get_relay_hyst($(ADDRESS),$(RELAY)) $(PORT)")
}
record(ao, "$(DEVICE):RelayHystSp-$(RELAY)") {
    field(DESC, "Setpoint for relay Hysteresis $(RELAY)")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,"@mks937b_relay.proto set_relay_hyst($(ADDRESS),$(RELAY)) $(PORT)")

    field(FLNK, "$(DEVICE):RelayHystRb-$(RELAY)")
}
  
# Direction
record(bi, "$(DEVICE):RelayDirectionRb-$(RELAY):Trig"){
	field(SCAN, "$(SCAN_RATE)")
	field(FLNK, "$(DEVICE):RelayDirectionRb-$(RELAY)")
}
record(mbbi, "$(DEVICE):RelayDirectionRb-$(RELAY)") {
  field(DESC, "Direction for the relay $(RELAY)")
  field(DTYP, "stream")
  field(INP,  "@mks937b_relay.proto get_relay_direction($(ADDRESS),$(RELAY)) $(PORT)") 
  field(PINI, "YES") 
  
  field(ZRVL, "0")
  field(ONVL, "1")
  field(ZRST, "ABOVE")
  field(ONST, "BELOW")
}
record(mbbo, "$(DEVICE):RelayDirectionSp-$(RELAY)"){
    field(DESC, "Set the relay $(RELAY) direction")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT, "@mks937b_relay.proto set_relay_direction($(ADDRESS),$(RELAY)) $(PORT)")
     
    field(UNSV, "INVALID")
    #The IVOA field specifies an action to take from a number of possible choices when the INVALID alarm is triggered4
    field(IVOA, "Don't drive outputs")

    field(ZRVL, "0")
    field(ONVL, "1")
    field(ZRST, "ABOVE")
    field(ONST, "BELOW")

    field(FLNK, "$(DEVICE):RelayDirectionRb-$(RELAY)")
}
   
# Relay Status
# In case the unit was changed at the ihm

record(bi, "$(DEVICE):RelayStatusRb-$(RELAY):Trig"){
	field(SCAN, "5 second")
	field(FLNK, "$(DEVICE):RelayStatusRb-$(RELAY)")
}
record(mbbi, "$(DEVICE):RelayStatusRb-$(RELAY)") {
  field(DESC, "Status of the relay $(RELAY)")
  field(DTYP, "stream")
  field(INP,  "@mks937b_relay.proto get_relay_mode($(ADDRESS),$(RELAY)) $(PORT)") 
  field(PINI, "YES") 
  
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "SET")
  field(ONST, "CLEAR")
  field(TWST, "ENABLE")
} 
record(mbbo, "$(DEVICE):RelayStatusSp-$(RELAY)"){
    field(DESC, "Set relay $(RELAY) status")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT, "@mks937b_relay.proto set_relay_mode($(ADDRESS),$(RELAY)) $(PORT)")

    field(UNSV, "INVALID")
    #The IVOA field specifies an action to take from a number of possible choices when the INVALID alarm is triggered4
    field(IVOA, "Don't drive outputs")

    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(ZRST, "SET")
    field(ONST, "CLEAR")
    field(TWST, "ENABLE")

    field(FLNK, "$(DEVICE):RelayStatusRb-$(RELAY)")
}

# Relay Setpoint 
record(mbbi, "$(DEVICE):RelaySetpointStatusRb-$(RELAY)") {
  field(DESC, "Setpoint status of the relay $(RELAY)")
  field(DTYP, "stream")
  field(INP,  "@mks937b_relay.proto get_relaysp_status($(ADDRESS),$(RELAY)) $(PORT)") 
  field(PINI, "YES") 
  field(SCAN, "$(SCAN_RATE)")
  
  field(ZRVL, "0")
  field(ONVL, "1") 
  field(ZRST, "SET")
  field(ONST, "CLEAR") 
}
