# Record definition file for one Agilent 4UHV Ion Pump Controller device.
# This is based on the work of Pete Owens from the Science and Technology Facilities Council (STFC).

# Parameters are:
# PORT              - Name of the serial port configured in asynDriver.
# PREFIX            - Prefix name for all PVs associated with the device.
# SERIAL_ADDRESS    - Controller RS-485 serial address (from 0 to 31). For configuring this parameter,
# add 128 to the desired address. As an example, for the serial address 20, this parameter should be
# configured as 128 + 20 = 148.
##########################################################################
#                              One time reading                          #
##########################################################################
record(ai, "$(PREFIX):TriggerOneTime"){
	field(FLNK, "$(PREFIX):Model-Cte")
}
# Model
record(stringin, "$(PREFIX):Model-Cte") {
    field(DESC, "Device model")
    field(DTYP, "stream")
    field(INP, "@Agilent-4UHV.proto getModel($(SERIAL_ADDRESS)) $(PORT)")
    field(FLNK, "$(PREFIX):SerialNumber-Cte")
}
# Serial number
record(stringin, "$(PREFIX):SerialNumber-Cte") {
    field(DESC, "Device serial number")
    field(DTYP, "stream")
    field(INP,  "@Agilent-4UHV.proto getSerialNumber($(SERIAL_ADDRESS)) $(PORT)")
    field(FLNK, "$(PREFIX):OutOneTime")
}
##########################################################################

# Fan Temperature
record(longin, "$(PREFIX):FanTemperature-Mon") {
    field(DESC, "Fan temperature")
    field(DTYP, "stream")
    field(EGU,  "Â°C")
    field(HOPR, "200")
    field(LOPR, "0")
    field(INP,  "@Agilent-4UHV.proto fanTemperatureMon($(SERIAL_ADDRESS)) $(PORT)")
}

# Protect On/Off
record(longin, "$(PREFIX):Protect-RB") {
    field(DESC, "Protect")
    field(DTYP, "stream")
    field(INP,  "@Agilent-4UHV.proto getProtect($(SERIAL_ADDRESS)) $(PORT)")
}
record(bo, "$(PREFIX):Protect1-SP") {
    field(DTYP, "Soft Channel")
    field(ZNAM, "Fixed")
    field(ONAM, "Step")
    field(IVOA, "Don't drive outputs")
    field(DESC, "Current Interlock for channel 1")
}
record(bo, "$(PREFIX):Protect2-SP") {
    field(DTYP, "Soft Channel")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(IVOA, "Don't drive outputs")
    field(DESC, "Current Interlock for channel 2")
}
record(bo, "$(PREFIX):Protect3-SP") {
    field(DTYP, "Soft Channel")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(IVOA, "Don't drive outputs")
    field(DESC, "Current Interlock for channel 3")
}
record(bo, "$(PREFIX):Protect4-SP") {
    field(DTYP, "Soft Channel")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(IVOA, "Don't drive outputs")
    field(DESC, "Current Interlock for channel 4")
}
record(calcout, "$(PREFIX):Protect1-SP_calc"){
    field(CALC, "(14 & B) | (A)")
    #1110
    field(INPA, "$(PREFIX):Protect1-SP CP")
    field(INPB, "$(PREFIX):Protect-RB")
    field(OUT,  "$(PREFIX):Protect-SP_Backend CA")
}
record(calcout, "$(PREFIX):Protect2-SP_calc"){
    field(CALC, "(13 & B) | (A << 1)")
    #1101
    field(INPA, "$(PREFIX):Protect2-SP CP")
    field(INPB, "$(PREFIX):Protect-RB")
    field(OUT,  "$(PREFIX):Protect-SP_Backend CA")
}
record(calcout, "$(PREFIX):Protect3-SP_calc"){
    field(CALC, "(11 & B) | (A << 2)")
    #1011
    field(INPA, "$(PREFIX):Protect3-SP CP")
    field(INPB, "$(PREFIX):Protect-RB")
    field(OUT,  "$(PREFIX):Protect-SP_Backend CA")
}
record(calcout, "$(PREFIX):Protect4-SP_calc"){
    field(CALC, "(7 & B) | (A << 3)")
    #0111
    field(INPA, "$(PREFIX):Protect4-SP CP")
    field(INPB, "$(PREFIX):Protect-RB")
    field(OUT,  "$(PREFIX):Protect-SP_Backend CA")
}
record(longout, "$(PREFIX):Protect-SP_Backend") {
    field(DESC, "Protect")
    field(DTYP, "stream")
    field(OUT,  "@Agilent-4UHV.proto setProtect($(SERIAL_ADDRESS)) $(PORT)")
    field(DRVH, "15")
    field(DRVL, "0")
    field(FLNK, "$(PREFIX):Protect-RB")
}
# Step mode
record(longin, "$(PREFIX):Step-RB") {
    field(DESC, "Step mode")
    field(DTYP, "stream")
    field(INP,  "@Agilent-4UHV.proto getStep($(SERIAL_ADDRESS)) $(PORT)")
}
record(bo, "$(PREFIX):Step1-SP") {
    field(DTYP, "Soft Channel")
    field(ZNAM, "Fixed")
    field(ONAM, "Step")
    field(IVOA, "Don't drive outputs")
    field(DESC, "Step mode for channel 1")
}
record(bo, "$(PREFIX):Step2-SP") {
    field(DTYP, "Soft Channel")
    field(ZNAM, "Fixed")
    field(ONAM, "Step")
    field(IVOA, "Don't drive outputs")
    field(DESC, "Step mode for channel 2")
}
record(bo, "$(PREFIX):Step3-SP") {
    field(DTYP, "Soft Channel")
    field(ZNAM, "Fixed")
    field(ONAM, "Step")
    field(IVOA, "Don't drive outputs")
    field(DESC, "Step mode for channel 3")
}
record(bo, "$(PREFIX):Step4-SP") {
    field(DTYP, "Soft Channel")
    field(ZNAM, "Fixed")
    field(ONAM, "Step")
    field(IVOA, "Don't drive outputs")
    field(FLNK, "$(PREFIX):Step4-SP_calc.PROC")
    field(DESC, "Step mode for channel 4")
}
record(calcout, "$(PREFIX):Step1-SP_calc"){
    field(CALC, "(14 & B) | (A)")
    field(INPA, "$(PREFIX):Step1-SP CP")
    field(INPB, "$(PREFIX):Step-RB")
    field(OUT,  "$(PREFIX):Step-SP_Backend CA")
}
record(calcout, "$(PREFIX):Step2-SP_calc"){
    field(CALC, "(13 & B) | (A << 1)")
    field(INPA, "$(PREFIX):Step2-SP CP")
    field(INPB, "$(PREFIX):Step-RB")
    field(OUT,  "$(PREFIX):Step-SP_Backend CA")
}
record(calcout, "$(PREFIX):Step3-SP_calc"){
    field(CALC, "(11 & B) | (A << 2)")
    field(INPA, "$(PREFIX):Step3-SP CP")
    field(INPB, "$(PREFIX):Step-RB")
    field(OUT,  "$(PREFIX):Step-SP_Backend CA")
}
record(calcout, "$(PREFIX):Step4-SP_calc"){
    field(CALC, "(7 & B) | (A << 3)")
    field(INPA, "$(PREFIX):Step4-SP CP")
    field(INPB, "$(PREFIX):Step-RB")
    field(OUT,  "$(PREFIX):Step-SP_Backend CA")
}
record(longout, "$(PREFIX):Step-SP_Backend") {
    field(DESC, "Step or Fixed mode")
    field(DTYP, "stream")
    field(OUT,  "@Agilent-4UHV.proto setStep($(SERIAL_ADDRESS)) $(PORT)")
    field(DRVH, "15")
    field(DRVL, "0")
    field(FLNK, "$(PREFIX):Step-RB")
}

# Unit
record(mbbi, "$(PREFIX):Unit-RB") {
    field(DESC, "Unit readback")
    field(DTYP, "stream")
    field(INP,  "@Agilent-4UHV.proto getUnit($(SERIAL_ADDRESS)) $(PORT)")
    field(PINI, "YES")
    field(PHAS, "0")

    field(ZRST, "Torr")
    field(ONST, "mBar")
    field(TWST, "Pa")
}
record(mbbo, "$(PREFIX):Unit-SP") {
    field(DESC, "Unit setpoint")
    field(DTYP, "stream")
    field(OUT, "@Agilent-4UHV.proto setUnit($(SERIAL_ADDRESS)) $(PORT)")

    field(DISV, "1")
    field(SDIS, "$(PREFIX):Unit_INIT.PACT")

    field(ZRST, "Torr")
    field(ONST, "mBar")
    field(TWST, "Pa")

    field(FLNK,"$(PREFIX):Unit-RB")
}
record(seq, "$(PREFIX):Unit_INIT"){
    field(PINI, "YES")
    field(PHAS, "1")
    field(DLY1, "5")
    field(DOL1, "$(PREFIX):Unit-RB.RVAL")
    field(LNK1, "$(PREFIX):Unit-SP.RVAL PP")
}

# Operating mode (autostart on/off)
record(bi, "$(PREFIX):Mode-RB") {
    field(DESC, "Autostart readback")
    field(DTYP, "stream")
    field(PINI, "YES")
    field(PHAS, "0")
    field(INP,  "@Agilent-4UHV.proto getMode($(SERIAL_ADDRESS)) $(PORT)")
    field(ONAM, "On")
    field(ZNAM, "Off")
}
record(bo, "$(PREFIX):Mode-SP") {
    field(DESC, "Autostart setpoint")
    field(DTYP, "stream")
    field(OUT,  "@Agilent-4UHV.proto setMode($(SERIAL_ADDRESS)) $(PORT)")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(DISV, "1")
    field(SDIS, "$(PREFIX):Mode_INIT.PACT")
    field(FLNK, "$(PREFIX):Mode-RB")
}
record(seq, "$(PREFIX):Mode_INIT"){
    field(PINI, "YES")
    field(PHAS, "1")
    field(DLY1, "5")
    field(DOL1, "$(PREFIX):Mode-RB.RVAL")
    field(LNK1, "$(PREFIX):Mode-SP.RVAL PP")
}
############################################################################
#                                  CHAIN                                   #
#               PREFIX_CH1  PREFIX_CH2  PREFIX_CH3  PREFIX_CH4             #
############################################################################
record(ai, "$(PREFIX):Trigger"){
	field(FLNK, "$(PREFIX):T")
}
record(fanout, "$(PREFIX):T"){
    field(SCAN, "Passive")
    field(SELM, "All")
    field(LNK1, "$(PREFIX):RB")
    field(LNK2, "$(PREFIX_CH1):T")
    field(LNK3, "$(PREFIX_CH2):T")
    field(LNK4, "$(PREFIX_CH3):T")
    field(LNK5, "$(PREFIX_CH4):T")
    field(LNK6, "$(PREFIX):Out")
}
record(fanout, "$(PREFIX):RB"){
    field(SCAN, "Passive")
    field(SELM, "All")
    field(LNK1, "$(PREFIX):Protect-RB")
    field(LNK2, "$(PREFIX):Step-RB")
    field(LNK3, "$(PREFIX):Mode_INIT")
    field(LNK4, "$(PREFIX):Unit_INIT")
}
